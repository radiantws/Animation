/* You can add global styles to this file, and also import other style files */

html,
body {
    height: 100%;
}
body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
    background-color: #181818;
}

// For Rotating Sphere ================================================================================================
$total: 350; // total particles
$orb-size: 100px;
$particle-size: 2px;
$time: 30s;
$base-hue: 0; // change for diff colors (180 is nice)

.sphere-wrapper {
    width: 100%;
    height: 100vh;
    overflow: hidden;
}

#particle-sphere {
    position: relative;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    transform-style: preserve-3d;
    perspective: 1000px;
    animation: rotate $time infinite linear;
}

@keyframes rotate {
    100% {
        transform: rotateY(360deg) rotateX(360deg);
    }
}

.c {
    position: absolute;
    width: $particle-size;
    height: $particle-size;
    border-radius: 50%;
    opacity: 0;
}

@for $i from 351 through 365 {
    $z: (random(360) * 1deg); // random angle to rotateZ
    $y: (random(360) * 1deg); // random to rotateX
    $hue: ((40/15 * $i) + $base-hue); // set hue
    body .c:nth-child(#{$i}) {
        background-color: hsla($hue, 0%, 85%, 1);
        opacity: 0 !important;
        animation: orbita3#{$i} 10s infinite !important;
        animation-delay: (368 - $i) * 1s !important;
    }
    @keyframes orbita3#{$i} {
        0% {
            opacity: 1;
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size * 5) rotateZ($z); // form orb
        }
        20% {
            opacity: 1; // fade in
        }
        30% {
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size * 3) rotateZ($z); // form orb
        }
        80% {
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // hold orb state 30-80
            opacity: 1; // hold opacity 20-80
        }
        100% {
            transform: rotateZ(-$z) rotateY($y) translateX(($orb-size)) rotateZ($z); // translateX * 3
        }
    }
}

@for $i from 1 through $total {
    $z: (random(360) * 1deg); // random angle to rotateZ
    $y: (random(360) * 1deg); // random to rotateX
    $hue: ((40 / $total * $i) + $base-hue); // set hue
    .c:nth-child(#{$i}) {
        // grab the nth particle
        animation: orbit#{$i} 15s 1;
        animation-delay: ($i * 0.01s);
        background-color: hsla($hue, 0%, 84.6%, 1);
        opacity: 0;
    }
    @keyframes orbit#{$i} {
        20% {
            opacity: 1; // fade in
        }
        30% {
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // form orb
        }
        80% {
            transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z); // hold orb state 30-80
            opacity: 1; // hold opacity 20-80
        }
        100% {
            transform: rotateZ(-$z) rotateY($y) translateX(($orb-size)) rotateZ($z); // translateX * 3
        }
    }
}

@for $i from 1 through $total {
    $z: (random(360) * 1deg); // random angle to rotateZ
    $y: (random(360) * 1deg); // random to rotateX
    $hue: ((40 / $total * $i) + $base-hue); // set hue
    .c.active:nth-child(#{$i}) {
        animation: orbita#{$i} 3s 1 !important;
        transform: rotateZ(-$z) rotateY($y) translateX(($orb-size)) rotateZ($z);
        opacity: 1;
    }
    @keyframes orbita#{$i} {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
}

// =============================================================================================================

#__particles {
    position: fixed;
    width: 100%;
    height: 100%;
    z-index: 1;
}
